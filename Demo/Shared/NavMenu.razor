@using Demo.Data
@using Demo.Data.Models
@inject NavigationManager Nav
@inject UserState UserState
@inject IDialogService DialogService
@implements IDisposable

<MudNavMenu Class="custom-nav">
    <MudNavLink Href="/" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All" Style="color:white; font-size: 1.2rem;">
        Inicio
    </MudNavLink>

    <MudNavLink Href="/mis-pedidos" Icon="@Icons.Material.Filled.List" Disabled="@(UserState.Usuario==null)" Style="color:white; font-size: 1.2rem;">
        Mis pedidos
    </MudNavLink>

    <MudNavLink Href="/hacerse-socio" Icon="@Icons.Material.Filled.CardMembership" Style="color:white; font-size: 1.2rem;">
        Hacerse socio
    </MudNavLink>

    @if (UserState.Usuario == null)
    {
        <MudNavLink Href="/login" Icon="@Icons.Material.Filled.Login" Style="color:white; font-size: 1.2rem;">
            Iniciar sesión
        </MudNavLink>

        <MudNavLink Href="/registro" Icon="@Icons.Material.Filled.PersonAdd" Style="color:white; font-size: 1.2rem;">
            Registrarse
        </MudNavLink>
    }
    else
    {
        @if (UserState.Usuario.Rol == Rol.Administrador)
        {
            <MudNavLink Href="/admin" Icon="@Icons.Material.Filled.AdminPanelSettings" Style="color:white; font-size: 1.2rem;">
                Administración
            </MudNavLink>
        }

        <MudNavLink Href="" OnClick="ConfirmAndLogout" Icon="@Icons.Material.Filled.ExitToApp" Style="color:white; font-size: 1.2rem;">
            Cerrar sesión
        </MudNavLink>
    }
</MudNavMenu>

@code {
    private async Task ConfirmAndLogout()
    {
        bool? confirmed = await DialogService.ShowMessageBox(
            "Confirmar cierre de sesión",
            "¿Estás seguro de que quieres cerrar sesión?",
            yesText: "Cerrar sesión",
            noText: "Cancelar"
        );

        if (confirmed == true)
        {
            await UserState.Logout();
            Nav.NavigateTo("/");
        }
    }

    protected override void OnInitialized()
    {
        UserState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UserState.OnChange -= StateHasChanged;
    }
}

// <auto-generated />
using System;
using Demo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20250618092938_Butacas y reservas")]
    partial class Butacasyreservas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Demo.Data.Models.Butaca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Fila")
                        .HasColumnType("int");

                    b.Property<int>("IdSala")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdSala");

                    b.ToTable("Butacas");
                });

            modelBuilder.Entity("Demo.Data.Models.Dia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dia_semana");

                    b.HasKey("Id");

                    b.ToTable("Dia");
                });

            modelBuilder.Entity("Demo.Data.Models.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("Demo.Data.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdButaca")
                        .HasColumnType("int");

                    b.Property<int>("IdSesion")
                        .HasColumnType("int");

                    b.Property<int?>("SesionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdButaca");

                    b.HasIndex("SesionId");

                    b.HasIndex("IdSesion", "IdButaca")
                        .IsUnique();

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Demo.Data.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NumeroSala")
                        .HasColumnType("int")
                        .HasColumnName("numero_sala");

                    b.HasKey("Id");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("Demo.Data.Models.Sesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time(6)");

                    b.Property<int>("IdDia")
                        .HasColumnType("int")
                        .HasColumnName("id_dia");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    b.Property<int>("IdSala")
                        .HasColumnType("int")
                        .HasColumnName("id_sala");

                    b.HasKey("Id");

                    b.HasIndex("IdDia");

                    b.HasIndex("IdPelicula");

                    b.HasIndex("IdSala");

                    b.ToTable("Sesion");
                });

            modelBuilder.Entity("Demo.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("correo_electronico");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("contrasena");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre_usuario");

                    b.Property<int>("Rol")
                        .HasColumnType("int")
                        .HasColumnName("rol");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Demo.Data.Models.Socio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PeliculaFavorita")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pelicula_favorita");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Socios");

                    b.HasOne("Demo.Data.Models.Usuario", "Usuario")
                        .WithOne()
                        .HasForeignKey("Demo.Data.Models.Socio", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Demo.Data.Models.Butaca", b =>
                {
                    b.HasOne("Demo.Data.Models.Sala", "Sala")
                        .WithMany("Butacas")
                        .HasForeignKey("IdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Demo.Data.Models.Reserva", b =>
                {
                    b.HasOne("Demo.Data.Models.Butaca", "Butaca")
                        .WithMany("Reservas")
                        .HasForeignKey("IdButaca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.Data.Models.Sesion", "Sesion")
                        .WithMany()
                        .HasForeignKey("IdSesion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.Data.Models.Sesion", null)
                        .WithMany("Reservas")
                        .HasForeignKey("SesionId");

                    b.Navigation("Butaca");

                    b.Navigation("Sesion");
                });

            modelBuilder.Entity("Demo.Data.Models.Sesion", b =>
                {
                    b.HasOne("Demo.Data.Models.Dia", "Dia")
                        .WithMany("Sesiones")
                        .HasForeignKey("IdDia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.Data.Models.Pelicula", "Pelicula")
                        .WithMany("Sesiones")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.Data.Models.Sala", "Sala")
                        .WithMany("Sesiones")
                        .HasForeignKey("IdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dia");

                    b.Navigation("Pelicula");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Demo.Data.Models.Butaca", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Demo.Data.Models.Dia", b =>
                {
                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("Demo.Data.Models.Pelicula", b =>
                {
                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("Demo.Data.Models.Sala", b =>
                {
                    b.Navigation("Butacas");

                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("Demo.Data.Models.Sesion", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
